# Generated by Django 5.0.1 on 2024-04-09 13:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('results', '0002_rename_lab_user_hematologyresult_approved_by_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChemicalPathologyTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('UREA 1.7-8.3', 'UREA 1.7-8.3'), ('NA 135-145', 'NA 135-145'), ('K 3.8-5.4', 'K 3.8-5.4'), ('HCO2 24-32', 'HCO2 24-32'), ('CL 98-108', 'CL 98-108'), ('FASTING', 'FASTING'), ('RANDOM 3.89-6.11', 'RANDOM 3.89-6.11'), ('2HR PP', '2HR PP'), ('CSF GLUCOSE 2.78-4.44', 'CSF CLUCOSE 2.78-4.44'), ('CSF PROTEIN 150-400', 'CSF PROTEIN 150-400'), ('CSF CHLORIDE 120-130', 'CSF CHLORIDE 120-130'), ('CHOLESTEROL 3.89-6.21', 'CHOLESTEROL 3.89-6.21'), ('TRIGLYCERIDE 0.00-1.92', 'TRIGLYCERIDE 0.00-1.92'), ('HDL-CHOL >1.68(FEMALE) >1.68(MALE)', 'HDL-CHOL > 1.68(FEMALE) > 1.68(MALE)'), ('LDL-CHOL < 3.90', 'LDL-CHOL < 3.90'), ('ALKALINE PHOSPHATES 9-35(ADULT) 35-100(CHILD)', 'ALKALINE PHOSPHATES 9-35(ADULT) 35-100(CHILD)'), ('SGOT 0-12', 'SGOT 0-12'), ('SGPT 0-12', 'SGPT 0-12'), ('GAMA G. T 10-40', 'GAMA G. T 10-40'), ('BILLIRUBIN TOTAL= <17', 'BILLIRUBIN TOTAL= <17'), ('BILLIRUBIN DIRECT= <4.3', 'BILLIRUBIN DIRECT= <4.3'), ('T:PROTEIN 6.5-8.7', 'T:PROTEIN 6.5-8.7'), ('ALBUMIN 3.8-4.4', 'ALBUMIN 3.8-4.4'), ('GLOBULIN 2-3.9', 'GLOBULIN 2-3.9'), ('ALKALINE PHOSPHATES 9-35(ADULT) 35-100(CHILDREN)', 'ALKALINE PHOSPHATES 9-35(ADULT) 35-100(CHILDREN)'), ('CALCIUM 2.02-2.60', 'CALCIUM 2.02-2.60'), ('INORG. PHOSPHATES 0.81-1.62(ADULT) 1.30-2.26(CHILDREN)', 'INORG. PHOSPHATES 0.81-1.62(ADULT) 1.30-2.26(CHILDREN)'), ('URIC ACID 202-416(MALE) 142-339(FEMALE)', 'URIC ACID 202-416(MALE) 142-339(FEMALE)'), ('CREATININE 53-97(MALE) 44-80(FEMALE)', 'CREATININE 53-97(MALE) 44-80(FEMALE)'), ('SERUM ANYLASE', 'SERUM ANYLASE'), ('ACID PHOSPHATES: TOTAL (<11U/L)', 'ACID PHOSPHATES: PROSTATIC (<11U/L)'), ('ACID PHOSPHATES: TOTAL (<11U/L)', 'ACID PHOSPHATES: PROSTATIC (<11U/L)')], max_length=100)),
                ('reference_range', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GeneralTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('', ''), ('', ''), ('', '')], max_length=100)),
                ('reference_range', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MicrobiologyTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('', ''), ('', ''), ('', '')], max_length=100)),
                ('reference_range', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SerologyTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('', ''), ('', ''), ('', '')], max_length=100)),
                ('reference_range', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ChemicalPathologyResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('natured_of_specimen', models.CharField(blank=True, max_length=1, null=True)),
                ('date_collected', models.DateField(blank=True, null=True)),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chemical_pathology_results', to='results.profile')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chemical_pathology_results', to='results.patient')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='results.hematologytest')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('natured_of_specimen', models.CharField(blank=True, max_length=1, null=True)),
                ('date_collected', models.DateField(blank=True, null=True)),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_results', to='results.profile')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_results', to='results.patient')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='results.hematologytest')),
            ],
        ),
        migrations.CreateModel(
            name='MicrobiologyResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('natured_of_specimen', models.CharField(blank=True, max_length=1, null=True)),
                ('date_collected', models.DateField(blank=True, null=True)),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='microbiology_results', to='results.profile')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='microbiology_results', to='results.patient')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='results.hematologytest')),
            ],
        ),
        migrations.CreateModel(
            name='SerologyResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('natured_of_specimen', models.CharField(blank=True, max_length=1, null=True)),
                ('date_collected', models.DateField(blank=True, null=True)),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='serology_results', to='results.profile')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='serology_results', to='results.patient')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='results.hematologytest')),
            ],
        ),
    ]
